: usage ( -- noret ) s" 
usage: bake cmd somefile.blue

cmd:
	build 	- compile the specified blue file
	run 	- compile and run the specified blue file

" 
	type bye
;

\ TODO move this, doesn't logically fit here
\ TODO compile time concat
: build-dir ( -- ) c" .build/" ; inline
: bin-dir ( -- ) c" .build/bin/" ; inline 
: obj-dir ( -- ) c" .build/obj/" ; inline

: make-build-dirs ( -- )
	build-dir mkdir
	bin-dir mkdir
	obj-dir mkdir 
;

\ TODO move to brt0.5 or similar
1 resq argc
1 resq argv
1 resq envp

\ TODO needed because we can't currently `@ var !` and retain operation size
: argc! ( rcx -- ) argc ! ;

: envp-start ( rax args:rcx -- start:rax ) 3 shl 8 add add ;

\ TODO 'arg@ is work around since outputs don't flow
: nth-arg ( argv:rsi nth:rdi -- rdx ) 3 shl add @
: 'arg@ ( arg:rdx -- rdx ) ;

\ TODO rax clobber is temporary
: brt0.5 ( rax -- | rax ) dup dup dup
	@ argc!
	8 add argv !
	argc @ envp-start envp !
;

1 resq cmd-name
1 resq blue-file

\ TODO these are needed because we can't currently `@ var !` and retain operation size
: cmd-name! ( rcx -- ) cmd-name ! ;
: blue-file! ( rcx -- ) blue-file ! ;

\ TODO support operation size for cmp so caller doesn't have to pass in argc
: check-argc ( rcx -- ) 3 cmp ' usage xl ;

: parse-args ( rax -- ) 
	brt0.5 \ TODO move out of here
	argc @ check-argc
	argv @ 1 nth-arg cmd-name !
	argv @ 2 nth-arg blue-file !
;

global _start

: syscall ( num:eax -- result:eax ) syscall ;

: write ( buf:esi len:edx fd:edi -- result:eax ) 1 syscall ;
: execve ( filename:edi argv:esi env:edx -- noret ) 59 syscall ;
: exit ( status:edi -- noret ) 60 syscall ;
: mkdir ( path:edi mode:esi -- result:eax ) 83 syscall ;

: die ( err:eax -- noret ) neg exit ;
: unwrap ( result:eax -- value:eax ) dup 0 cmp ' die xl ;
: ordie ( result -- ) unwrap drop ;
: ignore ( result:eax err:edi -- ) swap dup rot cmp ' ordie xne drop ;

1 const stdout
-17 const exists

: bye ( -- noret ) 0 exit ;
: type ( buf len -- ) stdout write ordie ;
: newline ( -- ) s" \n" type ;

: find0 ( start:rsi -- end:rsi ) lodsb 0 cmp latest xne ; 
: cstrlen ( str:rdi -- len:rsi ) dup find0 swap sub dec ;
: cstr>str ( cstr:rdx -- str:rsi len:rdx ) dup cstrlen xchg ;
: type-cstr ( buf -- ) cstr>str type ;
: type-cstr@ ( addr -- ) @ type-cstr ;

: mkdir ( path -- ) 0750 mkdir exists ignore ;

: make-build-dirs ( -- )
	c" .build/" mkdir
	c" .build/bin/" mkdir
	c" .build/obj/" mkdir 
;

1 resq cmd-name
1 resq blue-file

: usage ( -- noret ) s" 
	usage: bake cmd somefile.blue
" 
	type bye 
;

: check-argc ( rax -- ) @ 3 cmp ' usage xne ;
: first-arg ( rax -- rax ) 16 add ; 
: next-arg ( rax -- rax ) 8 add ; 
: parse-args ( rax -- ) dup dup 
	check-argc
	first-arg cmd-name !
	next-arg blue-file ! 
;

1 resq execve-file
1 resq execve-arg0
1 resq execve-arg1
1 resq execve-arg2
1 resq execve-arg3

: prep-execve ( file:rsi arg0:rax -- ) execve-arg0 ! execve-file ! ;
: set-args ( arg1:rsi arg2:rax arg3:rcx -- ) execve-arg3 ! execve-arg2 ! execve-arg1 ! ;

: build ( -- noret ) 
	c" /usr/bin/env" c" env" prep-execve
	c" blue" c" bake.blue" 0 set-args
	execve-file @ execve-arg0 0 execve 
	s" here" type newline bye 
;

: run ( -- noret ) s" need to run..." type newline bye ;

: cmd-table ( -- noret )
	decb( 0 0 0 98 117 105 108 100 ) ' build decq
	decb( 0 0 0 0 0 114 117 110 ) ' run decq
;

: cmd-key ( qword:rax len:rcx -- key:rax ) 8 sub neg 3 shl shl ;
: cstr>cmd-key ( cstr:rdx -- key:rax ) cstr>str swap @ swap cmd-key ;
: call-cmd ( cmd:rdi -- noret ) @ call ;

: call-cmd-with-key ( key:rax -- noret ) 2 ' cmd-table rot
: scan-cmd-table ( tries:ecx tbl:rdi key:rax -- noret ) 
	scasq ' call-cmd xe drop 8 add latest loop
	usage
;

: call-named-cmd ( name:rdx -- noret ) @ cstr>cmd-key call-cmd-with-key ;

: _start ( rsp -- noret ) 
	parse-args
	make-build-dirs 
	cmd-name @ call-named-cmd
;

global _start

: syscall ( num:eax -- result:eax ) syscall ;

: write ( buf:esi len:edx fd:edi -- result:eax ) 1 syscall ;
: execve ( filename:edi argv:esi env:edx -- result:eax ) 59 syscall ;
: exit ( status:edi -- noret ) 60 syscall ;
: mkdir ( path:edi mode:esi -- result:eax ) 83 syscall ;

: die ( err:eax -- noret ) neg exit ;
: unwrap ( result:eax -- value:eax ) dup 0 cmp ' die xl ;
: ordie ( result -- ) unwrap drop ;
: ignore ( result:eax err:edi -- ) swap dup rot cmp ' ordie xne drop ;

1 const stdout
-17 const exists

: bye ( -- noret ) 0 exit ;
: type ( buf len -- ) stdout write ordie ;
: newline ( -- ) s" \n" type ;

: find0 ( start:rsi -- end:rsi ) lodsb 0 cmp latest xne ; 
: cstrlen ( str:rdi -- len:rsi ) dup find0 swap sub dec ;
: cstr>str ( cstr:rdx -- str:rsi len:rdx ) dup cstrlen xchg ;
: type-cstr ( buf -- ) cstr>str type ;
: type-cstr@ ( addr -- ) @ type-cstr ;

: mkdir ( path -- ) 0750 mkdir exists ignore ;

: make-build-dirs ( -- )
	c" .build/" mkdir
	c" .build/bin/" mkdir
	c" .build/obj/" mkdir 
;

1 resq cmd-name
1 resq blue-file

: usage ( -- noret ) s" 
	usage: bake cmd somefile.blue
" 
	type bye 
;

: check-argc ( rax -- ) @ 3 cmp ' usage xne ;
: first-arg ( rax -- rax ) 16 add ; 
: next-arg ( rax -- rax ) 8 add ; 
: parse-args ( rax -- ) dup dup 
	check-argc
	first-arg cmd-name !
	next-arg blue-file ! 
;

\ TODO nicer way to illustrate this
\ TODO rename all the cmd related words
: build-cmd-key ( -- ) decb( 0 0 0 98 117 105 108 100 ) ; inline
: run-cmd-key ( -- ) decb( 0 0 0 0 0 114 117 110 ) ; inline

: cmd-key ( buf:rax len:rcx -- key:rax ) 7 and -8 add neg 3 shl shr ;

\ TODO these will eventually fork+execve
: build-cmd ( -- noret ) s" need to build..." type newline bye ;
: run-cmd ( -- noret ) s" need to run..." type newline bye ;

\ TODO label/declare vs having to create a new word?
: cmd-table ( -- noret )
	\ run-cmd-key	' run-cmd decq
	\ build-cmd-key	' build-cmd decq
	0 decq		' build-cmd decq
	1 decq		' run-cmd decq
;

: execve-cmd ( cmd:rdi -- noret ) @ call ;

: execve-keyed-cmd ( key:rax -- noret ) 1 2 ' cmd-table rot
: find-cmd-with-key ( tries:ecx tbl:rdi key:rax -- noret ) 
	scasq ' execve-cmd xz drop 8 add latest loop
	usage
;

: execve-named-cmd ( name:rdx -- noret ) @ cstr>str cmd-key execve-keyed-cmd ;

: _start ( rsp -- noret ) 
	parse-args
	\ cmd-name @ type-cstr@ newline
	\ blue-file @ type-cstr@ newline
	make-build-dirs 
	cmd-name @ execve-named-cmd
;

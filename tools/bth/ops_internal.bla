; internal ops used by bth

STDOUT = 0x01

SYS_READ = 0x00
SYS_WRITE = 0x01
SYS_OPEN = 0x02

BLK_CODE = 0x07
BLK_TEST_INPUT = 0x06
BLK_TEST_OUTPUT = 0x08

opcode_tbl:
.offset = 0x80

opBI	op_atq, 1, 0	;	( a -- q )	Push qword value found at addr
	atincq
	drop
	ret
end_op

opBI	op_ifnot, 1, 0	;	( t/f fa -- ? )	Call fa if t/f is false
	comp
		ret
	endcomp
	swap
	ifelse
	ret
end_op

opBI	op_chkargc, 1, 0	;	( -- )	Exit with error unless argc is 2
	argc
	litb	0x02
	eq
	comp
		litb	0x01
		litb	0x3C
		scall1
	endcomp
	litop	op_ifnot_code
	ret
end_op

opBI	op_tfd, 1, 0	;	( -- d )	Push fd of test input file
	litd	0x00
	ret
end_op

opBI	op_oblk, 1, 0	;	( -- a )	Push addr of TAP output's start
	litb	BLK_TEST_OUTPUT
	blk
	ret
end_op

opBI	op_thr, 1, 0	;	( -- a )	Push addr of TAP output's here
	litq	0x00
	ret
end_op

opBI	op_setthr, 1, 0	;	( a -- )	Set addr of TAP output's here
	litb	op_thr_code
	setvarq
	ret
end_op

opBI	op_argv1, 1, 0	;	( -- a )	Push _argv[1]_
	argv
	litb	0x08
	add
	litop	op_atq_code
	ret
end_op

opBI	op_opentst, 1, 0	;	( -- )	Open argv[1] and set tfd
	litb	0x00
	litop	op_argv1_code
	litb	SYS_OPEN
	scall2
	
	litb	op_tfd_code
	setvard
	ret
end_op

opBI	op_readtst, 1, 0	;	( -- )	Read block from tfd into the test input block
	litw	0x0400
	litb	BLK_TEST_INPUT
	blk
	litop	op_tfd_code
	litb	SYS_READ
	scall3
	drop
	
	ret
end_op

opBI	op_runtst, 1, 0	;	( -- )	Run the test in the test input block
	litb	BLK_CODE
	blk
	litb	op_here_code
	setvarq

	litb	BLK_TEST_INPUT
	blk
	call
	ret
end_op

opBI	op_endl, 1, 0	;	( a -- )	End line of output and set TAP output's here
	litb	0x0A
	setincb
	litop	op_setthr_code
	ret
end_op

opBI	op_woka, 1, 0	;	( a -- )	Write ok line to addr
	litw	'ok'
	setincw
	litop	op_endl_code
	ret
end_op

opBI	op_tapout, 1, 0	;	( -- )	Write TAP output to stdout
	litop	op_thr_code
	litop	op_oblk_code
	sub
	litop	op_oblk_code
	litb	STDOUT
	litb	SYS_WRITE
	scall3
	drop
	
	ret
end_op

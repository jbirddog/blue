include "bth.inc"

EAX = 0x00
EDX = 0x02
ESI = 0x06
EDI = 0x07

RSI = ESI
RDI = EDI

CODE_BLK = 0x07
TEST_INPUT_BLK = 0x09

SYS_OPEN = 0x02

chkargc

; compile machine code to open argv[1] into `tfd`
here

; movabs rdi, _addr of argv[1]_
argv
litb	0x08
add
atq
litb	RDI
cmovq

; xor esi, esi (flags = READ_ONLY)
litb	ESI
cxord

; mov eax, SYS_OPEN
litb	SYS_OPEN
litb	EAX
cmovd

; syscall
litb	0x0F
cb
litb	0x05
cb

; movabs rdi, _addr of tfd's litd_
litb	tfd.code
op
litb	0x03
add
litb	RDI
cmovq

; stosd
litb	0xAB
cb

; ret
litb	0xC3
cb

mccall

; TODO: check fd

; compile machine code to read block from `tfd` into _input block_
here

; mov edi, _tfd
tfd
litb	EDI
cmovd

; mov rsi, _addr of _input block_
litb	TEST_INPUT_BLK
blk
litb	RSI
cmovq

; mov edx, 0x0400
litw	0x400
litb	EDX
cmovd

; xor eax, eax
litb	EAX
cxord

; syscall
litb	0x0F
cb
litb	0x05
cb

; ret
litb	0xC3
cb

mccall

litb	CODE_BLK
blk
litb	here.code
setvarq

litb	TEST_INPUT_BLK
blk
call

; this should never run
litb	0xFF
exit

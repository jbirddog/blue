
include "../tools/bth/tap.inc"

test

litw	'02'
plan

;
; implement assert as extended opcode 0xFF at runtime
;

litb	0xFF
opentry

; set flags and size
litb	OPCODE_ENTRY_FLAG_BYTECODE
setincb
litb	0x01
setincb

; compile and write bytecode address into the opcode table
comp
	comp
		ok
	endcomp
	comp
		notok
	endcomp
	ifelse
endcomp
setincq
drop

; call ext opcode to check that stack depth is 0
depth
litb	0x00
eq
litop	0xFF

;
; implement extended opcode 0xFF to add 7 to the top of the stack
;

litb	0xFF
opentry

; set flags and size
litb	OPCODE_ENTRY_FLAG_BYTECODE or OPCODE_ENTRY_FLAG_INLINED
setincb
litb	0x01
setincb

; compile bytecode into the opcode table
litb	op_litb_code
setincb
litb	0x07
setincb
litb	op_add_code
setincb
litb	op_ret_code
setincb
drop

; call ext opcode to check initial value is 0
litb	0x03
litop	0xFF
litb	0x0A
okeq

done

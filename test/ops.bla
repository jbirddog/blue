
include "../tools/bth/bth.inc"

test

litw	'19'
plan

;
; implement assert as custom opcode 0xFF
;

litb	0xFF
op

; set flags and size
litb	0x04
setincb
litb	0x01
setincb

; compile and write bytecode address into the opcode table
comp
	comp
	endcomp
	comp
		litb	0xFF
		exit
	endcomp
	ifelse
endcomp
setq

; stack depth is 0
depth
litb	0x00
eq
callop	0xFF


;
; lit
;

litq	0x0000000000000001
litb	0x01
okeq

;
; test data stack ops
;

; stack depth is 1 after pushing a value
litb	0x10
depth
litb	0x01
okeq

; stack depth is 0 after dropping the value
drop
depth
litb	0x00
okeq

; not
depth
litb	0x02
okne

; swap
litb	0x02
litb	0x01
swap
depth
okeq
drop

; sub
litb	0x09
litb	0x07
sub
litb	0x02
okeq

; add
litb	0x07
litb	0x02
add
litb	0x09
okeq

; shl/shr
litb	0x01
litb	0x03
shl
litb	0x08
okeq

litb	0x08
litb	0x03
shr
litb	0x01
okeq

; dup
here
dup
okeq

; tor and fromr
here
tor
fromr
here
okeq


; test setincb
here

here
litb	0x01
setincb

litb	0x01
sub
okeq

; test setincd
here

here
litb	0x01
setincd

litb	0x04
sub
okeq

; test setincq
here

here
litb	0x01
setincq

litb	0x08
sub
okeq

; test cb
here

litb	0xC3
cb
here
litb	0x01
sub
atb
litb	0xC3
okeq

drop

; test cd
here

litb	0xC3
cd
here
litb	0x04
sub
atb
litb	0xC3
okeq

drop

; test cq
here

litb	0xC3
cq
here
litb	0x08
sub
atb
litb	0xC3
okeq

drop

;
; test calling compiled machine code
;

; call address that immediately returns
here
litb	0xC3
cb
mccall

; push two numbers, compile and call machine code that calls the add opcode
litb	0x03
litb	0x05

here

; xor eax, eax
; mov al, _add opcode_
litb	0x31
cb
litb	0xC0
cb
litb	0xB0
cb
litb	add.code
cb

; movabs rdi, _addr of opcode handler_
litb	0x48
cb
litb	0xBF
cb
oph
cq

; call rdi
litb	0xFF
cb
litb	0xD7
cb

; ret
litb	0xC3
cb

mccall

litb	0x08
okeq

;
; control flow
;

start
start
eq
comp
	litb	0x01
endcomp
comp
endcomp
ifelse
start
dup
litb	0x0A
add
eq
comp
endcomp
comp
	litb	0x03
endcomp
ifelse

add
litb	0x04
eq
comp
endcomp
comp
	litb	0xFF
	exit
endcomp
ifelse

; jump over litb 07 exit
ip
litb	0x07
add
setip
litb	0x07
exit

;
; fin
;

; set code buffer back to start
start
sethere
start
here
okeq

done

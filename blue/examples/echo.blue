import sys

global _start

: syscall3 ( edi edx esi num:eax -- result:eax ) syscall ;
: unwrap ( result:eax -- value:eax ) dup 0 cmp ' exit.syserr xl ;

: read ( fd len buf -- result ) 0 syscall3 ;
: write ( fd len buf -- result ) 1 syscall3 ;

1024 const buf.cap

\ TODO clamp for 0 <= len <= buf.cap for write's variable len
\ pmaxud, pminud?

buf.cap resb buf

: read ( fd:edi -- read:eax ) buf.cap buf read unwrap ;
: write ( len:edx fd:edi -- wrote:eax ) swap buf write unwrap ;

hide buf

\ TODO compare read/write bytes for exit status
: _start ( -- noret ) stdin read stdout write 0 exit ; 

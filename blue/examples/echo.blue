global _start

: syscall1 ( edi num:eax -- result:eax ) syscall ;
: exit ( status:edi -- noret ) 60 syscall1 ;

: syscall3 ( edi esi edx eax -- result:eax ) syscall ;

: read ( fd:edi buf:esi len:edx -- result:eax ) 0 syscall3 ;
: write ( fd:edi buf:esi len:edx -- result:eax ) 1 syscall3 ;

1024 const buf.cap
buf.cap resb buf

: read ( fd:edi -- result:eax ) buf buf.cap read ;
: write ( fd:edi -- result:eax ) buf buf.cap write ;

\ : die? ( result:eax -- value:eax ) dup 0 cmp ' exit.syserr xl ;

0 const stdin
1 const stdout

\ TODO compare read/write bytes for exit status
: _start ( -- noret ) stdin read stdout write 0 exit ; 

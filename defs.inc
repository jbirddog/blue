
CELL_SIZE = 8

INPUT_BUFFER_OFFSET = 0
INPUT_BUFFER_SIZE = 2048

RETURN_STACK_OFFSET = INPUT_BUFFER_OFFSET + INPUT_BUFFER_SIZE
RETURN_STACK_SIZE = 1024

DATA_STACK_OFFSET = RETURN_STACK_OFFSET + RETURN_STACK_SIZE
DATA_STACK_SIZE = 1024

OPCODE_MAP_OFFSET = DATA_STACK_OFFSET + DATA_STACK_SIZE
OPCODE_MAP_SIZE = 4096

RUNTIME_BUFFER_OFFSET = OPCODE_MAP_OFFSET + OPCODE_MAP_SIZE
RUNTIME_BUFFER_SIZE = 4096

VM_ADDRS_OFFSET = RUNTIME_BUFFER_OFFSET
VM_ADDRS_SIZE = 64

CODE_BUFFER_OFFSET = VM_ADDRS_OFFSET + VM_ADDRS_SIZE
CODE_BUFFER_SIZE = (4096 - VM_ADDRS_SIZE)

MEM_SIZE = RUNTIME_BUFFER_OFFSET + RUNTIME_BUFFER_SIZE

assert OPCODE_MAP_OFFSET = 4096
assert RUNTIME_BUFFER_OFFSET = (4096 * 2)
assert MEM_SIZE = (4096 * 3)

OPCODE_HANDLER_COMPILE = opcode_handler_compile
OPCODE_HANDLER_INTERPRET = opcode_handler_interpret
OPCODE_HANDLER_INVALID = _opcode_handler_invalid

OPCODE_ENTRY_FLAG_IMMEDIATE = 1 shl 0
OPCODE_ENTRY_FLAG_INLINED = 1 shl 1
OPCODE_ENTRY_FLAG_BYTECODE = 2 shl 1

ERR_DATA_STACK_UNDERFLOW = 105
ERR_DATA_STACK_OVERFLOW = 106
ERR_RETURN_STACK_UNDERFLOW = 107
ERR_RETURN_STACK_OVERFLOW = 108

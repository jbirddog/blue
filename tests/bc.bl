
#
# test compiling and calling bytecode
#

[ ] depth litb 01 = [ ] [ litb 01 exit ] if-else
drop

[ ] b@ litb ret = [ ] [ litb 02 exit ] if-else

[ ] call
[ [ ] call ] call
[ [ [ ] call ] call ] call
[ [ [ [ ] call ] call ] call ] call
[ [ [ [ [ ] call ] call ] call ] call ] call
[ [ [ [ [ [ ] call ] call ] call ] call ] call ] call

[ ]
dup litb 01 - b@ litb ip! = [ ] [ litb 03 exit ] if-else
dup litb 0A - b@ litb lit = [ ] [ litb 04 exit ] if-else
[ drop ] call

litb 01 litb 02 [ + ] call
litb 03 = [ ] [ litb 05 exit ] if-else

litb 04 litb 05 [ [ [ + ] call ] call ] call
litb 09 = [ ] [ litb 06 exit ] if-else

litb 01 [ litb 03 = [ [ litb 07 exit ] [ ] if-else ] call ] call

[ ] here swap call here = [ ] [ litb 08 exit ] if-else

depth exit

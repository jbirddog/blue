global _start

: syscall ( num:eax -- result:eax ) syscall ;

60 const exit

: exit ( status:edi -- noret ) exit syscall ;
: exit.ok ( -- noret ) 0 exit ;
: exit.syserr ( err:eax -- noret ) neg exit ;

: unwrap ( result:eax -- value:eax ) dup 0 cmp ' exit.syserr xl ;
: ordie ( result -- ) unwrap drop ;

: syscall ( arg2:esi arg3:edx arg1:edi num:eax -- result:eax ) syscall ;

1 const stdout
1 const write

: write ( buf len -- ) stdout write syscall ordie ;

: newline ( -- ) s" \n" write ;

: writeln ( buf len -- ) write newline ; 

: find0 ( start:rsi -- end:rsi ) lodsb 0 cmp latest xne ; 
: cstrlen ( str:rdi -- len:rsi ) dup find0 swap sub dec ;
: cstr>str ( cstr:rdx -- str:rsi len:rdx ) dup cstrlen xchg ;

: print-arg ( arg -- ) cstr>str writeln ;

: _start ( rsp -- noret ) dup [] swap 
: print-args ( argc:rcx argv:rsp -- noret ) 8 add [] print-arg latest loop 
exit.ok ;

global _start

: syscall ( num:eax -- result:eax | rcx ) syscall ;

60 const exit

: exit ( status:edi -- noret ) exit syscall ;
: exit.ok ( -- noret ) 0 exit ;
: exit.syserr ( err:eax -- noret ) neg exit ;

: unwrap ( result:eax -- value:eax ) dup 0 cmp ' exit.syserr xl ;
: ordie ( result -- ) unwrap drop ;

: syscall ( arg1:edi arg2:esi arg3:edx num:eax -- result:eax ) syscall ;

2 const open

: open ( pathname flags mode -- fd ) open syscall unwrap ;

\ TODO base 8 would be interesting here

1 const forWriting
64 const create
512 const truncate

create forWriting or truncate or const flags

256 const userCanRead
128 const userCanWrite
32 const groupCanRead

userCanRead userCanWrite or groupCanRead or const mode

: create-file ( pathname -- fd ) flags mode open ;

: create-files ( -- ) s" output.txt" drop create-file ;
: make-directories ( -- ) s" /docs" drop dup ;

: _start ( -- noret ) create-files make-directories exit.ok ;

import linux_x86-64

global _start

: unwrap ( result:eax -- value:eax ) dup 0 cmp ' die xl ;

: read ( fd:edi len:edx buf:esi -- result:eax ) 0 syscall ;
: write ( fd:edi len:edx buf:esi -- result:eax ) 1 syscall ;

1024 const buf.cap

buf.cap resb buf

: read ( fd -- read ) buf.cap buf read unwrap ;
: write ( len fd -- wrote ) swap buf write unwrap ;

hide buf

\ TODO compare read/write bytes for exit status
\ TODO loop until read 0
: _start ( -- noret ) stdin read stdout write bye ; 
